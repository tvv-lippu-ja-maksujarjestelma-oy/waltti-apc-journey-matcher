---
name: "CI/CD: Continuous integration and continuous deployment"

"on":
  push:
    branches:
      - main
    tags:
      - "v*"
  pull_request:

env:
  REGISTRY: ghcr.io
  REGISTRY_USERNAME: "${{ github.repository_owner }}"
  IMAGE_NAME: "ghcr.io/${{ github.repository }}"
  TEST_STAGE: tester
  PRODUCTION_STAGE: production

jobs:
  build-check-test-push:
    name: Build, check, test, push
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Extract Pulsar version from package.json
        run: |
          echo "PULSAR_VERSION=$(jq -r '.config.pulsarVersion' < ./package.json)" >> "${GITHUB_ENV}"
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: ${{ env.IMAGE_NAME }}
          tags: |
            type=edge,branch=main
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}},enable=${{ !startsWith(github.ref, 'refs/tags/v0.') }}
            type=sha,format=long
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ env.REGISTRY_USERNAME }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and export to Docker
        uses: docker/build-push-action@v2
        with:
          context: .
          load: true
          target: "${{ env.TEST_STAGE }}"
          build-args: "PULSAR_VERSION=${{ env.PULSAR_VERSION }}"
          tags: "${{ env.IMAGE_NAME }}:${{ env.TEST_STAGE }}"
      - name: Check and test
        run: |
          docker run --rm "${{ env.IMAGE_NAME }}:${{ env.TEST_STAGE }}"
      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          target: "${{ env.PRODUCTION_STAGE }}"
          build-args: "PULSAR_VERSION=${{ env.PULSAR_VERSION }}"
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
